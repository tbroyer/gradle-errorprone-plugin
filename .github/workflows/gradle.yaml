name: CI

on:
  push:
    paths-ignore:
      - '**/*.md'
  pull_request:
    paths-ignore:
      - '**/*.md'

# First build on Linux and Windows with JDK 11
# Then run tests with various Gradle and JDK versions (Linux only)
jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - uses: gradle/actions/setup-gradle@v3
        with:
          build-scan-publish: true
          build-scan-terms-of-service-url: "https://gradle.com/terms-of-service"
          build-scan-terms-of-service-agree: "yes"

      - name: Build with Gradle
        id: gradle-build
        run: ./gradlew build

      - name: Store reports
        if: always() && (steps.gradle-build.outcome == 'success' || steps.gradle-build.outcome == 'failure')
        uses: actions/upload-artifact@v4
        with:
          name: linux-reports
          path: build/reports/

  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - uses: gradle/actions/setup-gradle@v3
        with:
          build-scan-publish: true
          build-scan-terms-of-service-url: "https://gradle.com/terms-of-service"
          build-scan-terms-of-service-agree: "yes"

      - name: Build with Gradle
        id: gradle-build
        run: ./gradlew build

      - name: Store reports
        if: always() && (steps.gradle-build.outcome == 'success' || steps.gradle-build.outcome == 'failure')
        uses: actions/upload-artifact@v4
        with:
          name: windows-reports
          path: build/reports/

  test-gradle:
    needs: linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        gradle: [ '8.10.2', '8.9', '8.8', '8.7', '8.6', '8.5', '8.4', '8.3', '8.2.1', '8.1.1', '8.0.2', '7.5.1', '7.4.2', '7.3.3', '7.2', '7.1.1', '7.0.2', '6.9.4', '6.8.3' ]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - uses: gradle/actions/setup-gradle@v3
        with:
          build-scan-publish: true
          build-scan-terms-of-service-url: "https://gradle.com/terms-of-service"
          build-scan-terms-of-service-agree: "yes"

      - name: Build with Gradle
        id: gradle-build
        run: ./gradlew integrationTest "-Ptest.gradle-version=${{ matrix.gradle }}"

      - name: Store reports
        if: always() && (steps.gradle-build.outcome == 'success' || steps.gradle-build.outcome == 'failure')
        uses: actions/upload-artifact@v4
        with:
          name: gradle-${{ matrix.gradle }}-tests
          path: build/reports/tests/integrationTest/

  test-jdk:
    needs: linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ 8, 17 ]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: |
            ${{ matrix.java }}
            11

      - name: Setup environment
        run: |
          echo "org.gradle.java.installations.auto-download=false" | tee -a gradle.properties
          echo "org.gradle.java.installations.fromEnv=JAVA_HOME_${{ matrix.java }}_X64" | tee -a gradle.properties

      - uses: gradle/actions/setup-gradle@v3
        with:
          build-scan-publish: true
          build-scan-terms-of-service-url: "https://gradle.com/terms-of-service"
          build-scan-terms-of-service-agree: "yes"

      - name: Build with Gradle
        id: gradle-build
        run: ./gradlew integrationTest "-Ptest.java-toolchain=${{ matrix.java }}"

      - name: Store reports
        if: always() && (steps.gradle-build.outcome == 'success' || steps.gradle-build.outcome == 'failure')
        uses: actions/upload-artifact@v4
        with:
          name: jdk-${{ matrix.java }}-tests
          path: build/reports/tests/integrationTest/

  test-jdk21-gradle810:
    needs: linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: |
            21
            11

      - name: Setup environment
        run: |
          echo "org.gradle.java.installations.auto-download=false" | tee -a gradle.properties
          echo "org.gradle.java.installations.fromEnv=JAVA_HOME_21_X64" | tee -a gradle.properties

      - uses: gradle/actions/setup-gradle@v3
        with:
          build-scan-publish: true
          build-scan-terms-of-service-url: "https://gradle.com/terms-of-service"
          build-scan-terms-of-service-agree: "yes"

      - name: Build with Gradle
        id: gradle-build
        run: ./gradlew integrationTest "-Ptest.java-toolchain=21" "-Ptest.gradle-version=8.10.2"

      - name: Store reports
        if: always() && (steps.gradle-build.outcome == 'success' || steps.gradle-build.outcome == 'failure')
        uses: actions/upload-artifact@v4
        with:
          name: jdk-21-tests
          path: build/reports/tests/integrationTest/
